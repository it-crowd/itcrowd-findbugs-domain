<?xml version="1.0" encoding="UTF-8"?>
<MessageCollection xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="messagecollection.xsd">

    <Plugin>
        <ShortDescription>FindBugs IT Crowd domain annotation checks Plugin</ShortDescription>
        <Details>IT Crowd domain annotation checks</Details>
    </Plugin>

    <Detector class="pl.com.it_crowd.findbugs.NotNullInconsistency">
        <Details>
            NotNullInconsistency
        </Details>
    </Detector>
    <Detector class="pl.com.it_crowd.findbugs.NotEmptyInconsistency">
        <Details>
            NotEmptyInconsistency
        </Details>
    </Detector>
    <Detector class="pl.com.it_crowd.findbugs.ManyToOneInconsistency">
        <Details>
            ManyToOneInconsistency
        </Details>
    </Detector>
    <Detector class="pl.com.it_crowd.findbugs.SizeInconsistency">
        <Details>
            SizeInconsistency
        </Details>
    </Detector>
    <Detector class="pl.com.it_crowd.findbugs.TableInconsistency">
        <Details>
            EntityVsTableInconsistency
        </Details>
    </Detector>

    <BugPattern type="NOT_NULL_INCONSISTENCY">
        <ShortDescription>@NotNull inconsistency</ShortDescription>
        <LongDescription>@NotNull used for nullable column or not-null column misses @NotNull annotation on {1}</LongDescription>
        <Details>
            <![CDATA[
<p>Properties that are annotated with @Column(nullable=false) or @JoinColumn(nullable=false) should be annotated @NotNull, otherwise they should not.</p>
]]>
        </Details>
    </BugPattern>

    <BugPattern type="NOT_EMPTY_INCONSISTENCY">
        <ShortDescription>@NotEmpty inconsistency</ShortDescription>
        <LongDescription>@NotEmpty placed on unsupported type on {1}</LongDescription>
        <Details>
            <![CDATA[
<p>@NotEmpty supports only only String/array/Collection/Map.</p>
]]>
        </Details>
    </BugPattern>

    <BugPattern type="MANY_TO_ONE_INCONSISTENCY">
        <ShortDescription>@ManyToOne inconsistency</ShortDescription>
        <LongDescription>@ManyToOne requires @JoinColumn and optional must be equal to nullable on {1}</LongDescription>
        <Details>
            <![CDATA[
<p>@ManyToOne requires @JoinColumn. @ManyToOne.optional must be in synch with @JoinColumn.nullable.</p>
]]>
        </Details>
    </BugPattern>

    <BugPattern type="SIZE_INCONSISTENCY">
        <ShortDescription>@Size inconsistency</ShortDescription>
        <LongDescription>@Size's max is not in sync with column length, is missing or applied to wrong type on column on {1}
        </LongDescription>
        <Details>
            <![CDATA[
<p>If column is of type String then @Size annotation is required and @Size's max attribtue must match column's length.
@Size supports only following types:<ul>
<li>String (string length is evaludated)</li>
<li>Collection (collection size is evaluated)</li>
<li>Map (map size is evaluated)</li>
<li>Array (array length is evaluated)
null elements are considered valid.</li>
</ul>
</p>
]]>
        </Details>
    </BugPattern>

    <BugPattern type="TABLE_INCONSISTENCY">
        <ShortDescription>@Table inconsistency</ShortDescription>
        <LongDescription>@Table with name is required for @Entity on {0}</LongDescription>
        <Details>
            <![CDATA[
    <p>You must specify @Table with name attribute specified for entity.</p>
    ]]>
        </Details>
    </BugPattern>

    <BugCode abbrev="NNI">@NotNull Inconsistency</BugCode>
    <BugCode abbrev="NEI">@NotEmpty Inconsistency</BugCode>
    <BugCode abbrev="MTOI">@ManyToOne Inconsistency</BugCode>
    <BugCode abbrev="SI">@Size Inconsistency</BugCode>
    <BugCode abbrev="TI">@Table Inconsistency</BugCode>
</MessageCollection>